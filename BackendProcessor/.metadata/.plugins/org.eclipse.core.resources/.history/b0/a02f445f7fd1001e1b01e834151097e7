package com.genowti.backend.LoginDB.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.genowti.backend.LoginDB.entity.User;
import com.genowti.backend.LoginDB.service.UserLoginService;


@RestController
@CrossOrigin
public class UserLoginController 
{

  @Autowired
  private UserLoginService service;

  @PostMapping("/login/successfully")
  public ResponseEntity<User> createUser(@RequestBody User user) {
      User createdUser = service.createuser(user);

      if (createdUser != null) {
          return ResponseEntity.status(HttpStatus.CREATED).body(createdUser);
      } else {
          return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
      }
   }
  
 /* @PostMapping("/existbyid")  
  public ResponseEntity<String> existbyid(@RequestBody String email) 
  {
      User user = new User();
      user.setEmail(email);
      String exist = service.checkExist(user);
      return ResponseEntity.status(HttpStatus.FOUND).body(exist); 	  
  } */ 
  
  @PostMapping("/existbyid")
  public ResponseEntity<ExistenceResponse> existbyid(@RequestBody ExistenceRequest request) {
      // Create a new User object
      User user = new User();
      // Set the email received in the request body to the User object
      user.setEmail(request.getEmail());

      // Assuming service is an instance of your service class
      // Call the checkExist method to determine if the user exists
      String exist = service.checkExist(user);

      // Create a response object
      ExistenceResponse response = new ExistenceResponse(exist);

      // Return the response object with HTTP status code
      return ResponseEntity.status(HttpStatus.FOUND).body(response);
  }

  // Define a static inner class for the request object to receive JSON data
  public static class ExistenceRequest {
      private String email;

      public String getEmail() {
          return email;
      }

      public void setEmail(String email) {
          this.email = email;
      }
  }

  // Define a static inner class for the response object to send JSON data
  public static class ExistenceResponse {
      private String existence;

      public ExistenceResponse(String existence) {
          this.existence = existence;
      }

      public String getExistence() {
          return existence;
      }

      public void setExistence(String existence) {
          this.existence = existence;
      }
   }
}